{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Poke","useState","num","setNum","name","setName","moves","setMoves","useEffect","a","axios","get","res","console","log","data","length","getData","style","color","value","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAgDeA,EA3CF,WAEX,MAAqBC,qBAArB,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAAuBF,qBAAvB,mBAAMG,EAAN,KAAYC,EAAZ,KACA,EAAyBJ,qBAAzB,mBAAMK,EAAN,KAAaC,EAAb,KAeF,OAbEC,qBAAU,WAAM,4CACb,4BAAAC,EAAA,sEACoBC,IAAMC,IAAN,4CAA+CT,IADnE,OACQU,EADR,OAEEC,QAAQC,IAAIF,EAAIG,KAAKX,MACrBC,EAAQO,EAAIG,KAAKX,MACjBG,EAASK,EAAIG,KAAKT,MAAMU,QAJ1B,4CADa,uBAAC,WAAD,wBAObC,MAOL,gCAEA,8CAAgB,uBAAMC,MAAS,CAACC,MAAM,OAAtB,cAAgCjB,EAAhC,eAChB,8CAAgB,sBAAMgB,MAAS,CAACC,MAAM,OAAtB,SAA+Bf,OAC/C,0CAAY,uBAAMc,MAAS,CAACC,MAAM,OAAtB,cAAgCb,EAAhC,eACV,yBACAc,MAASlB,EACTmB,SAAY,SAACC,GACTnB,EAAOmB,EAAMC,OAAOH,QAHxB,UAOA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,sBC7BaI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.379d231c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport \"./App.css\";\nimport axios from 'axios';\n\nconst Poke = () => {\n\n  const[num, setNum] = useState();\n  const[name, setName] = useState();\n  const[moves, setMoves] = useState();\n\n  useEffect(() => {\n     async function getData(){\n       const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${num}`);\n       console.log(res.data.name);\n       setName(res.data.name);\n       setMoves(res.data.moves.length);\n     }\n     getData();\n    \n  });\n\n  \n\nreturn (\n<div>\n  \n<h1> you choose <span style = {{color:'red'}}> {num} value</span></h1>\n<h1> My name is <span style = {{color:'red'}}>{name}</span></h1>\n<h1> I have <span style = {{color:'red'}}> {moves} moves</span></h1>\n  <select \n  value = {num} \n  onChange = {(event) =>{\n      setNum(event.target.value);\n    }\n  }>\n  \n  <option value=\"1\">1</option>\n  <option value=\"25\">25</option>\n  <option value=\"3\">3</option>\n  <option value=\"4\">4</option>\n  <option value=\"5\">5</option>\n  \n  </select>\n</div>\n  );\n}\n\nexport default Poke;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}